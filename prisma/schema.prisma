generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model company {
  id               Int        @id @default(autoincrement())
  email            String     @unique
  name             String
  slogan           String?
  description      String?
  cnpj             String     @unique
  logo             String?
  background       String?
  salary           Int?
  password         String
  recoveryPassword String?
  type             String?    @default("company")
  ceos             ceo[]
  employees        employee[]
}

model ceo {
  id               Int      @id @default(autoincrement())
  name             String
  email            String   @unique
  cpf              String   @unique
  photo            String?
  companyId        Int?
  password         String
  recoveryPassword String?
  type             String?  @default("ceo")
  company          company? @relation(fields: [companyId], references: [id])
}

model employee {
  id               Int             @id @default(autoincrement())
  name             String
  email            String          @unique
  cpf              String          @unique
  photo            String?
  salary           Int?
  companyId        Int?
  password         String
  recoveryPassword String?
  totalExpenses    Int?
  totalLoans       Int?
  totalMoney       Int?
  type             String?         @default("employee")
  company          company?        @relation(fields: [companyId], references: [id])
  employeeTasks    employeeTasks[]
  expenses         expense[]
  loans            loan[]
}

model task {
  id            Int             @id @default(autoincrement())
  title         String
  description   String?
  value         Int
  employeeTasks employeeTasks[]
}

model employeeTasks {
  id           Int        @id @default(autoincrement())
  employeeId   Int?
  taskId       Int
  statusTaskId Int        @default(1)
  employee     employee?  @relation(fields: [employeeId], references: [id])
  statusTask   statusTask @relation(fields: [statusTaskId], references: [id])
  tasks        task       @relation(fields: [taskId], references: [id])
}

model statusTask {
  id     Int             @id @default(autoincrement())
  status String          @unique
  tasks  employeeTasks[]
}

model expense {
  id              Int           @id @default(autoincrement())
  title           String
  description     String?
  value           Int
  statusExpenseId Int           @default(1)
  type            String
  employeeId      Int
  recorrent       Boolean       @default(false)
  employee        employee      @relation(fields: [employeeId], references: [id])
  statusExpense   statusExpense @relation(fields: [statusExpenseId], references: [id])
}

model statusExpense {
  id       Int       @id @default(autoincrement())
  status   String    @unique
  expenses expense[]
}

model loan {
  id          Int      @id @default(autoincrement())
  description String
  value       Int
  employeeId  Int
  accepted    Boolean  @default(false)
  employee    employee @relation(fields: [employeeId], references: [id])
}
